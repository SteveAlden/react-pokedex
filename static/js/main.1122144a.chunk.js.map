{"version":3,"sources":["Header.js","HeaderJumbo.js","Pokemon.js","PokemonP.js","PokeList.js","PokeListP.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","fixed","style","backdropFilter","backgroundColor","paddingBottom","variant","Brand","alt","src","height","Jumbo","width","Pokemon","pokemon","this","props","poke","console","log","Component","PokemonP","state","transform","boxShadow","onMouseOver","setState","onMouseOut","getStyle","transition","scaleDown","transitions","PokeListP","fadeDown","flip","helix","displayNo","pokemons","columnWidth","appear","appeared","enter","entered","leaved","gutterWidth","gutterHeight","appearDelay","map","p","App","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iOAuCeA,MArCf,WACE,OACE,yBAAKC,UAAU,iBAEb,kBAACC,EAAA,EAAD,CACEC,MAAM,MACNC,MAAO,CACLC,eAAgB,aAChBC,gBAAiB,qBAEjBC,cAAe,OAIjBC,QAAQ,QAGR,kBAACN,EAAA,EAAOO,MAAR,KACE,4BACE,yBACEC,IAAI,GAIJC,IAAI,+DAEJC,OAAO,KACPX,UAAU,6BAEX,MAXH,0BCPKY,EAZD,WACZ,OACE,oCACE,yBAEEF,IAAG,0FACHG,MAAM,W,iBC0BCC,E,iLA3BX,IAAMC,EAAUC,KAAKC,MAAMC,KAG3B,OAFAC,QAAQC,IAAIL,GAGV,oCACE,yBAEEL,IAAG,yFAAoFK,EAApF,QASHF,MAAM,c,GAnBMQ,a,iBC6CPC,GCvCQD,Y,2MDNrBE,MAAQ,CACNC,UAAW,aACXC,UAAW,Q,EAGbC,YAAc,WACZ,EAAKC,SAAS,CACZH,UAAW,cACXC,UAAW,2C,EAGfG,WAAa,WACX,EAAKD,SAAS,CACZH,UAAW,aACXC,UAAW,U,EAIfI,SAAW,WACT,MAAO,CACLJ,UAAW,EAAKF,MAAME,UAEtBK,WAAY,gBACZN,UAAW,EAAKD,MAAMC,Y,wEAKxB,IAAMT,EAAUC,KAAKC,MAAMC,KAG3B,OAFAC,QAAQC,IAAIL,GAIV,yBACEL,IAAG,sFAAiFK,EAAjF,QACHZ,MAAOa,KAAKa,WACZhB,MAAM,OACNa,YAAaV,KAAKU,YAClBE,WAAYZ,KAAKY,iB,GAvCFP,c,iBEEfU,EAAqCC,cAArCD,UA+COE,GA/C8BD,cAA1BE,SAA0BF,cAAhBG,KAAgBH,cAAVI,M,2MAKjCb,MAAQ,CACNc,UAAW,G,wEAGH,IAAD,IAKHtB,EAQJ,OAPA,UAAIC,KAAKC,aAAT,aAAI,EAAYqB,YACdvB,EAAUC,KAAKC,MAAMqB,SAErBnB,QAAQC,IAAI,YACZD,QAAQC,IAAIL,IAIZ,oCACE,kBAAC,IAAD,CACEwB,YAAa,IACbC,OAAQT,EAAUS,OAClBC,SAAUV,EAAUU,SACpBC,MAAOX,EAAUW,MACjBC,QAASZ,EAAUY,QACnBC,OAAQb,EAAUa,OAClBC,YAAa,GACbC,aAAc,GACdC,YAAa,IATf,UAaGhC,SAbH,aAaG,EAASiC,KAAI,SAAAC,GAAC,OACb,kBAAC,EAAD,CAAU/B,KAAM+B,a,GAlCJ5B,cCqNT6B,E,2MA9Mb3B,MAAQ,CACNewEAyCF,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKnC,MAAO,CAAEgD,UAAW,SAEvB,kBAAC,EAAD,CAAWb,SAAUtB,KAAKO,MAAMe,iB,GAxMxBjB,aCFE+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.1122144a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nfunction Header() {\r\n  return (\r\n    <div className='center-navbar'>\r\n      {/* <Navbar bg='dark' variant='dark'> */}\r\n      <Navbar\r\n        fixed='top'\r\n        style={{\r\n          backdropFilter: 'blur(10px)',\r\n          backgroundColor: 'rgba(20,20,20,0.5)',\r\n          // paddingTop: '5px',\r\n          paddingBottom: '5px'\r\n          // marginBottom: '100px'\r\n          // marginBottom: '100px'\r\n        }}\r\n        variant='dark'\r\n        // fixed='top'\r\n      >\r\n        <Navbar.Brand>\r\n          <h3>\r\n            <img\r\n              alt=''\r\n              // https://files.thetriangle.org/assets/pokemon/ball-master.png\r\n              // https://www.pikpng.com/pngl/m/59-590020_pokeball-png-photo-clipart.png\r\n              // https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/950cb3ae-f4e7-486e-9058-724c66bd7961/d7e57f0-a56ceb42-3c44-48d9-97dd-9b288b2c3e07.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzk1MGNiM2FlLWY0ZTctNDg2ZS05MDU4LTcyNGM2NmJkNzk2MVwvZDdlNTdmMC1hNTZjZWI0Mi0zYzQ0LTQ4ZDktOTdkZC05YjI4OGIyYzNlMDcucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.6Y_fhBzzr2RnT2gX2PC7AWMNzw7BtULrxOmSQkd9BpA\r\n              src='https://files.thetriangle.org/assets/pokemon/ball-master.png'\r\n              // width='35'\r\n              height='40'\r\n              className='d-inline-block align-top'\r\n            />\r\n            {'   '}\r\n            Steve's Pok√©dex\r\n          </h3>\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nconst Jumbo = () => {\r\n  return (\r\n    <>\r\n      <img\r\n        // style={{ marginTop: '50px' }}\r\n        src={`https://res.cloudinary.com/aldencloud/image/upload/v1584894390/JumboPokemon2_n0azyx.png`}\r\n        width='100%'\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jumbo;\r\n","import React, { Component } from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\n\r\nclass Pokemon extends Component {\r\n  render() {\r\n    // console.log(this.props.pokemon);\r\n    const pokemon = this.props.poke;\r\n    console.log(pokemon);\r\n    // import pokeImg from `./pokedex/${pokemon}.png`;\r\n    return (\r\n      <>\r\n        <img\r\n          // src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemon/poke-${pokemon}.png`}\r\n          src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemonpng/poke-${pokemon}.png`}\r\n          // style={{\r\n          //   // textAlign: 'center',\r\n          //   // marginTop: '5%',\r\n          //   marginLeft: '50%',\r\n          //   transform: 'translate(-50%,-75%)',\r\n          //   marginBottom: '-50%'\r\n          // }}\r\n\r\n          width='100%'\r\n          // style={{ boxShadow: '1px 1px 15px #888888' }}\r\n          // height={100}\r\n          // className='text-center mr-3'\r\n          // thumbnail\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokemon;\r\n","import React, { Component } from 'react';\r\n\r\nclass PokemonP extends Component {\r\n  state = {\r\n    transform: 'scale(1.0)',\r\n    boxShadow: 'none'\r\n  };\r\n\r\n  onMouseOver = () => {\r\n    this.setState({\r\n      transform: 'scale(1.05)',\r\n      boxShadow: '0px 5px 15px 5px rgba(87,255,196,0.5)'\r\n    });\r\n  };\r\n  onMouseOut = () => {\r\n    this.setState({\r\n      transform: 'scale(1.0)',\r\n      boxShadow: 'none'\r\n    });\r\n  };\r\n\r\n  getStyle = () => {\r\n    return {\r\n      boxShadow: this.state.boxShadow,\r\n      // borderRadius: '7px',\r\n      transition: 'transform .2s',\r\n      transform: this.state.transform\r\n    };\r\n  };\r\n  render() {\r\n    // console.log(this.props.pokemon);\r\n    const pokemon = this.props.poke;\r\n    console.log(pokemon);\r\n    // import pokeImg from `./pokedex/${pokemon}.png`;\r\n    return (\r\n      // <div>\r\n      <img\r\n        src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemon/poke-${pokemon}.png`}\r\n        style={this.getStyle()}\r\n        width='100%'\r\n        onMouseOver={this.onMouseOver}\r\n        onMouseOut={this.onMouseOut}\r\n      />\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonP;\r\n","import React, { Component } from 'react';\r\nimport Pokemon from './Pokemon';\r\n// import Container from '@material-ui/core/Container';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { CardDeck, Container } from 'react-bootstrap';\r\nimport Coverflow from 'react-coverflow';\r\n\r\n// const isDesktop = useMediaQuery({ minWidth: 600 });\r\n\r\nclass PokeList extends Component {\r\n  state = {\r\n    displayNo: 1\r\n  };\r\n\r\n  render() {\r\n    // this.setState({ po: pokemon });\r\n\r\n    // const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\r\n    // const isMobile = useMediaQuery({ maxWidth: 600 });\r\n    let pokemon;\r\n    if (this.props?.pokemons) {\r\n      pokemon = this.props.pokemons;\r\n      // const pokemon = this.props.pokemons;\r\n      console.log('Pokelist');\r\n      console.log(pokemon);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Container style={{ maxWidth: '100%', marginTop: '20px' }}>\r\n          <Coverflow\r\n            displayQuantityOfSide={3}\r\n            // navigation\r\n            // width='100%'\r\n            // height='80%'\r\n            infiniteScroll\r\n            // enableHeading\r\n            active={0}\r\n            // currentFigureScale={1}\r\n            // otherFigureScale={0.5}\r\n            media={{\r\n              '@media (max-width: 900px)': {\r\n                width: '100%',\r\n                height: '80vh'\r\n              },\r\n              '@media (min-width: 900px)': {\r\n                width: '100%',\r\n                height: '80vh'\r\n              }\r\n            }}\r\n          >\r\n            {pokemon?.map(p => (\r\n              <Pokemon poke={p} />\r\n            ))}\r\n          </Coverflow>\r\n        </Container>\r\n      </>\r\n    );\r\n    // return pokemon?.map(poke => <Pokemon pokemon={poke} />);\r\n  }\r\n}\r\n\r\nexport default PokeList;\r\n","import React, { Component } from 'react';\r\nimport PokemonP from './PokemonP';\r\nimport StackGrid, { transitions } from 'react-stack-grid';\r\n\r\nconst { scaleDown, fadeDown, flip, helix } = transitions;\r\n\r\n// const isDesktop = useMediaQuery({ minWidth: 600 });\r\n\r\nclass PokeListP extends Component {\r\n  state = {\r\n    displayNo: 1\r\n  };\r\n\r\n  render() {\r\n    // this.setState({ po: pokemon });\r\n\r\n    // const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\r\n    // const isMobile = useMediaQuery({ maxWidth: 600 });\r\n    let pokemon;\r\n    if (this.props?.pokemons) {\r\n      pokemon = this.props.pokemons;\r\n      // const pokemon = this.props.pokemons;\r\n      console.log('Pokelist');\r\n      console.log(pokemon);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <StackGrid\r\n          columnWidth={150}\r\n          appear={scaleDown.appear}\r\n          appeared={scaleDown.appeared}\r\n          enter={scaleDown.enter}\r\n          entered={scaleDown.entered}\r\n          leaved={scaleDown.leaved}\r\n          gutterWidth={10}\r\n          gutterHeight={10}\r\n          appearDelay={80}\r\n          // rtl={true}\r\n          // duration={1000}\r\n        >\r\n          {pokemon?.map(p => (\r\n            <PokemonP poke={p} />\r\n          ))}\r\n        </StackGrid>\r\n      </>\r\n    );\r\n    // return pokemon?.map(poke => <Pokemon pokemon={poke} />);\r\n  }\r\n}\r\n\r\nexport default PokeListP;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Jumbo from './HeaderJumbo';\n// import DisplayImages from './Images';\n// import pngimg1 from './pokedex/1.png';\n// import pngimg2 from './pokedex/2.png';\n// import pngimg3 from './pokedex/3.png';\n// import pngimg4 from './pokedex/4.png';\nimport Coverflow from 'react-coverflow';\nimport { Container } from 'react-bootstrap';\nimport PokeList from './PokeList';\nimport PokeListP from './PokeListP';\n\nclass App extends Component {\n  state = {\n    pokemons: [\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      25,\n      26,\n      27,\n      28,\n      29,\n      30,\n      31,\n      32,\n      33,\n      34,\n      35,\n      36,\n      37,\n      38,\n      39,\n      40,\n      41,\n      42,\n      43,\n      44,\n      45,\n      46,\n      47,\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57,\n      58,\n      59,\n      60,\n      61,\n      62,\n      63,\n      64,\n      65,\n      66,\n      67,\n      68,\n      69,\n      70,\n      71,\n      72,\n      73,\n      74,\n      75,\n      76,\n      77,\n      78,\n      79,\n      80,\n      81,\n      82,\n      83,\n      84,\n      85,\n      86,\n      87,\n      88,\n      89,\n      90,\n      91,\n      92,\n      93,\n      94,\n      95,\n      96,\n      97,\n      98,\n      99,\n      100,\n      101,\n      102,\n      103,\n      104,\n      105,\n      106,\n      107,\n      108,\n      109,\n      110,\n      111,\n      112,\n      113,\n      114,\n      115,\n      116,\n      117,\n      118,\n      119,\n      120,\n      121,\n      122,\n      123,\n      124,\n      125,\n      126,\n      127,\n      128,\n      129,\n      130,\n      131,\n      132,\n      133,\n      134,\n      135,\n      136,\n      137,\n      138,\n      139,\n      140,\n      141,\n      142,\n      143,\n      144,\n      145,\n      146,\n      147,\n      148,\n      149,\n      150,\n      151\n    ]\n  };\n  render() {\n    // return (\n    //   <div className='App' style={{ backgroundColor: 'black' }}>\n    //     <Header />\n    //     <div>\n    //       <Container style={{ maxWidth: '100%', marginTop: '60px' }}>\n    //         <Coverflow\n    //           displayQuantityOfSide={3}\n    //           // navigation\n    //           width={900}\n    //           height={480}\n    //           infiniteScroll\n    //           enableHeading\n    //           media={{\n    //             // '@media (max-width: 900px)': {\n    //             //   // width: '600px',\n    //             //   // height: '300px'\n    //             // },\n    //             '@media (min-width: 900px)': {\n    //               width: '100%',\n    //               height: '80vh'\n    //             }\n    //           }}\n    //         >\n    //           {/* <img src='https://drive.google.com/open?id=1N9sI9VbyCmbOTmB3GFBLUHjj3bcYKZNr' /> */}\n    //           <img src={pngimg1} />\n    //           <img src={pngimg1} />\n    //           <img src={pngimg2} />\n    //           <img src={pngimg3} />\n    //           <img src={pngimg2} />\n    //           <img src={pngimg3} />\n    //           <img src={pngimg4} />\n    //           {/* <DisplayImages /> */}\n    //         </Coverflow>\n    //       </Container>\n    //     </div>\n    //   </div>\n    // );\n    return (\n      <div>\n        <Header />\n        <Jumbo />\n        <div style={{ marginTop: '85px' }}>\n          {/* <PokeList pokemons={this.state.pokemons} /> */}\n          <PokeListP pokemons={this.state.pokemons} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}