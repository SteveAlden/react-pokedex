{"version":3,"sources":["Header.js","Footer.js","Pokemon.js","PokemonP.js","PokeList.js","PokeListP.js","DisplayPokemonBig.js","Evolutions.js","DisplayPokemon.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","fixed","style","backdropFilter","backgroundColor","variant","Nav","Link","href","Brand","alt","src","height","Footer","Container","fluid","marginTop","align","Date","getFullYear","Component","Pokemon","pokemon","this","props","poke","console","log","width","PokemonP","state","transform","boxShadow","onMouseOver","setState","onMouseOut","getStyle","transition","borderRadius","textDecoration","to","onTouchStart","onTouchEnd","scaleDown","transitions","PokeListP","fadeDown","flip","helix","displayNo","pokemons","columnWidth","appear","appeared","enter","entered","leaved","gutterWidth","gutterHeight","appearDelay","map","p","Evolutions","evWidth","padding","margin","border","createEvolutionImage","imgId","imageid","DisplayPokemon","getChipStyle","pokeType","createRowCol","col1","col2","Row","Col","getDivStyle","paddingTop","paddingBottom","bgColor","getEvolutions","pokeDisplay","preEv","prev_evolution","nexEv","next_evolution","t","num","replace","match","params","id","getHr","pokemonData","dataLoaded","textColor","bodyColor","mediaColor","axios","get","then","res","data","pokemonDisplay","find","color","name","type","Chip","label","weight","spawn_chance","avg_spawns","spawn_time","weaknesses","size","App","exact","path","render","from","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.824b58d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n// import { Link } from 'react-router-dom';\r\nfunction Header() {\r\n  return (\r\n    <div className='center-navbar'>\r\n      {/* <Navbar bg='dark' variant='dark'> */}\r\n      <Navbar\r\n        fixed='top'\r\n        style={{\r\n          backdropFilter: 'blur(10px) saturate(150%)',\r\n          backgroundColor: 'rgba(20,20,20,0.5)'\r\n          // paddingBottom: '15px'\r\n          // paddingTop: '5px',\r\n          // paddingBottom: '5px'\r\n          // marginBottom: '100px'\r\n          // marginBottom: '100px'\r\n        }}\r\n        variant='dark'\r\n        // fixed='top'\r\n      >\r\n        {/* <Nav> */}\r\n        <Nav.Link href='/react-pokedex-carousel'>\r\n          <Navbar.Brand>\r\n            <h3>\r\n              <img\r\n                alt=''\r\n                // https://files.thetriangle.org/assets/pokemon/ball-master.png\r\n                // https://www.pikpng.com/pngl/m/59-590020_pokeball-png-photo-clipart.png\r\n                // https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/950cb3ae-f4e7-486e-9058-724c66bd7961/d7e57f0-a56ceb42-3c44-48d9-97dd-9b288b2c3e07.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzk1MGNiM2FlLWY0ZTctNDg2ZS05MDU4LTcyNGM2NmJkNzk2MVwvZDdlNTdmMC1hNTZjZWI0Mi0zYzQ0LTQ4ZDktOTdkZC05YjI4OGIyYzNlMDcucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.6Y_fhBzzr2RnT2gX2PC7AWMNzw7BtULrxOmSQkd9BpA\r\n                src='https://files.thetriangle.org/assets/pokemon/ball-master.png'\r\n                // width='35'\r\n                height='35'\r\n                className='d-inline-block align-top'\r\n              />\r\n              {'   '}\r\n              Steve's Pokédex\r\n            </h3>\r\n          </Navbar.Brand>\r\n        </Nav.Link>\r\n        {/* </Nav> */}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className='footer'>\r\n        <Container fluid style={{ marginTop: '2vh' }}>\r\n          <span>\r\n            <p className='copyright pull-right' align='center'>\r\n              &copy; {new Date().getFullYear()} S Steve Alden, all rights\r\n              reserved. Made with {/* ❤❤️ 💗*/}\r\n              <img\r\n                alt='LOVE'\r\n                src='https://res.cloudinary.com/aldencloud/image/upload/v1585305326/heart.png'\r\n              />\r\n            </p>\r\n          </span>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\n\r\nclass Pokemon extends Component {\r\n  render() {\r\n    // console.log(this.props.pokemon);\r\n    const pokemon = this.props.poke;\r\n    console.log(pokemon);\r\n    // import pokeImg from `./pokedex/${pokemon}.png`;\r\n    return (\r\n      <>\r\n        <img\r\n          // src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemon/poke-${pokemon}.png`}\r\n          src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemonpng/poke-${pokemon}.png`}\r\n          // style={{\r\n          //   // textAlign: 'center',\r\n          //   // marginTop: '5%',\r\n          //   marginLeft: '50%',\r\n          //   transform: 'translate(-50%,-75%)',\r\n          //   marginBottom: '-50%'\r\n          // }}\r\n\r\n          width='100%'\r\n          // style={{ boxShadow: '1px 1px 15px #888888' }}\r\n          // height={100}\r\n          // className='text-center mr-3'\r\n          // thumbnail\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokemon;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nclass PokemonP extends Component {\r\n  state = {\r\n    transform: 'scale(1.0)',\r\n    boxShadow: 'none'\r\n  };\r\n\r\n  onMouseOver = () => {\r\n    this.setState({\r\n      transform: 'scale(1.05)',\r\n      boxShadow: '0px 5px 15px 5px rgba(87,255,196,0.5)'\r\n    });\r\n  };\r\n  onMouseOut = () => {\r\n    this.setState({\r\n      transform: 'scale(1.0)',\r\n      boxShadow: 'none'\r\n    });\r\n  };\r\n\r\n  getStyle = () => {\r\n    return {\r\n      boxShadow: this.state.boxShadow,\r\n      // borderRadius: '7px',\r\n      transition: 'transform .2s',\r\n      transform: this.state.transform,\r\n      borderRadius: '20px'\r\n      // backgroundColor: 'rgb(25,25,25)'\r\n    };\r\n  };\r\n  render() {\r\n    // console.log(this.props.pokemon);\r\n    const pokemon = this.props.poke;\r\n    console.log(pokemon);\r\n    // import pokeImg from `./pokedex/${pokemon}.png`;\r\n    return (\r\n      // <div>\r\n      <Link style={{ textDecoration: 'none' }} to={`/pokemon/${pokemon}`}>\r\n        <img\r\n          src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemon/poke-${pokemon}.png`}\r\n          // src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemontrim/poke-${pokemon}.png`}\r\n          style={this.getStyle()}\r\n          width='100%'\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onTouchStart={this.onMouseOver}\r\n          onTouchEnd={this.onMouseOut}\r\n        />\r\n        {/* <LazyLoadImage\r\n          src={`https://res.cloudinary.com/aldencloud/image/upload/v1581096275/pokemon/poke-${pokemon}.png`} // use normal <img> attributes as props\r\n          width='100%'\r\n          style={this.getStyle()}\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n        /> */}\r\n      </Link>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonP;\r\n","import React, { Component } from 'react';\r\nimport Pokemon from './Pokemon';\r\n// import Container from '@material-ui/core/Container';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { CardDeck, Container } from 'react-bootstrap';\r\nimport Coverflow from 'react-coverflow';\r\n\r\n// const isDesktop = useMediaQuery({ minWidth: 600 });\r\n\r\nclass PokeList extends Component {\r\n  state = {\r\n    displayNo: 1\r\n  };\r\n\r\n  render() {\r\n    // this.setState({ po: pokemon });\r\n\r\n    // const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\r\n    // const isMobile = useMediaQuery({ maxWidth: 600 });\r\n    let pokemon;\r\n    if (this.props?.pokemons) {\r\n      pokemon = this.props.pokemons;\r\n      // const pokemon = this.props.pokemons;\r\n      console.log('Pokelist');\r\n      console.log(pokemon);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Container style={{ maxWidth: '100%', marginTop: '50px' }}>\r\n          <Coverflow\r\n            displayQuantityOfSide={3}\r\n            // navigation\r\n            // width='100%'\r\n            // height='80%'\r\n            infiniteScroll\r\n            // enableHeading\r\n            active={0}\r\n            // currentFigureScale={1}\r\n            // otherFigureScale={0.5}\r\n            media={{\r\n              '@media (max-width: 900px)': {\r\n                width: '100%',\r\n                height: '80vh'\r\n              },\r\n              '@media (min-width: 900px)': {\r\n                width: '100%',\r\n                height: '80vh'\r\n              }\r\n            }}\r\n          >\r\n            {pokemon?.map(p => (\r\n              <Pokemon poke={p} />\r\n            ))}\r\n          </Coverflow>\r\n        </Container>\r\n      </>\r\n    );\r\n    // return pokemon?.map(poke => <Pokemon pokemon={poke} />);\r\n  }\r\n}\r\n\r\nexport default PokeList;\r\n","import React, { Component } from 'react';\r\nimport PokemonP from './PokemonP';\r\nimport StackGrid, { transitions } from 'react-stack-grid';\r\n\r\nconst { scaleDown, fadeDown, flip, helix } = transitions;\r\n\r\n// const isDesktop = useMediaQuery({ minWidth: 600 });\r\n\r\nclass PokeListP extends Component {\r\n  state = {\r\n    displayNo: 1\r\n  };\r\n\r\n  render() {\r\n    // this.setState({ po: pokemon });\r\n\r\n    // const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\r\n    // const isMobile = useMediaQuery({ maxWidth: 600 });\r\n    let pokemon;\r\n    if (this.props?.pokemons) {\r\n      pokemon = this.props.pokemons;\r\n      // const pokemon = this.props.pokemons;\r\n      console.log('Pokelist');\r\n      console.log(pokemon);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <StackGrid\r\n          columnWidth={190}\r\n          appear={scaleDown.appear}\r\n          appeared={scaleDown.appeared}\r\n          enter={scaleDown.enter}\r\n          entered={scaleDown.entered}\r\n          leaved={scaleDown.leaved}\r\n          gutterWidth={15}\r\n          gutterHeight={15}\r\n          appearDelay={80}\r\n          // rtl={true}\r\n          // duration={1000}\r\n        >\r\n          {pokemon?.map(p => (\r\n            <PokemonP poke={p} />\r\n          ))}\r\n        </StackGrid>\r\n      </>\r\n    );\r\n    // return pokemon?.map(poke => <Pokemon pokemon={poke} />);\r\n  }\r\n}\r\n\r\nexport default PokeListP;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Media, Image } from 'react-bootstrap';\r\nimport Chip from '@material-ui/core/Chip';\r\n// import Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nclass DisplayPokemonBig extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemonData: {},\r\n      dataLoaded: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        'https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json'\r\n      )\r\n      .then(res => this.setState({ pokemonData: res.data }));\r\n  }\r\n\r\n  getChipStyle = pokeType => {\r\n    switch (pokeType) {\r\n      case 'Bug':\r\n        return '#C3D21F';\r\n\r\n      case 'Dark':\r\n        return '#8E6956';\r\n\r\n      case 'Dragon':\r\n        return '#8774FF';\r\n\r\n      case 'Electric':\r\n        return '#FDE53D';\r\n\r\n      case 'Fairy':\r\n        return '#F9ADFF';\r\n\r\n      case 'Fighting':\r\n        return '#A85643';\r\n\r\n      case 'Fire':\r\n        return '#FA5643';\r\n\r\n      case 'Flying':\r\n        return '#79A4FF';\r\n\r\n      case 'Ghost':\r\n        return '#7873D4';\r\n\r\n      case 'Grass':\r\n        return '#8DD851';\r\n\r\n      case 'Ground':\r\n        return '#EDCC56';\r\n\r\n      case 'Ice':\r\n        return '#96F1FF';\r\n\r\n      case 'Normal':\r\n        return '#BDBDAE';\r\n\r\n      case 'Poison':\r\n        return '#AB5DA2';\r\n\r\n      case 'Psychic':\r\n        return '#F662B1';\r\n\r\n      case 'Rock':\r\n        return '#CDBD72';\r\n\r\n      case 'Stell':\r\n        return '#C4C2DB';\r\n\r\n      case 'Water':\r\n        return '#56AEFF';\r\n    }\r\n  };\r\n  render() {\r\n    const flying = 'rgb()';\r\n    let pokemon;\r\n    let pokemonDisplay;\r\n    if (this.state?.pokemonData) {\r\n      let { pokemon } = this.state.pokemonData;\r\n      pokemonDisplay = pokemon?.find(\r\n        poke => poke.id == this.props.match.params.id\r\n      );\r\n      console.log(pokemonDisplay);\r\n      console.log(pokemon);\r\n    } else {\r\n      console.log('no data');\r\n    }\r\n    return (\r\n      <Container style={{ paddingTop: '150px' }}>\r\n        <Media>\r\n          <img\r\n            width={350}\r\n            height={350}\r\n            className='mr-3'\r\n            src={`https://res.cloudinary.com/aldencloud/image/upload/v1584876602/pokemonpng/poke-${this.props.match.params.id}.png`}\r\n            alt='Generic placeholder'\r\n          />\r\n          <Media.Body>\r\n            <h1>{pokemonDisplay?.name}</h1>\r\n            <div>\r\n              {pokemonDisplay?.type?.map(t => (\r\n                <>\r\n                  <Chip\r\n                    // size='small'\r\n                    label={t}\r\n                    color='primary'\r\n                    style={{ backgroundColor: this.getChipStyle(t) }}\r\n                  />{' '}\r\n                </>\r\n              ))}\r\n            </div>\r\n\r\n            {/* <p>\r\n              Cras sit amet nibh libero, in gravida nulla. Nulla vel metus\r\n              scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum\r\n              in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac\r\n              nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n            </p> */}\r\n            {/* <p>Height: {pokemonDisplay?.height}</p>\r\n            <p>Weight: {pokemonDisplay?.weight}</p>\r\n            <p>Candy: {pokemonDisplay?.candy}</p>\r\n            <p>Spawn Chance: {pokemonDisplay?.spawn_chance}</p>\r\n            <p>Average Spawn: {pokemonDisplay?.avg_spawns}</p>\r\n            <p>Spawn Time: {pokemonDisplay?.spawn_time}</p> */}\r\n            <h5>\r\n              The spawn chance of this pokémon is {pokemonDisplay?.spawn_chance}{' '}\r\n              and the number of average spawns is {pokemonDisplay?.avg_spawns}{' '}\r\n              and the usual spawn is at {pokemonDisplay?.spawn_time}.\r\n            </h5>\r\n            <h4>Weakness</h4>\r\n            <div>\r\n              {pokemonDisplay?.weaknesses?.map(t => (\r\n                <>\r\n                  <Chip\r\n                    size='small'\r\n                    label={t}\r\n                    color='primary'\r\n                    style={{ backgroundColor: this.getChipStyle(t) }}\r\n                  />{' '}\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Media.Body>\r\n        </Media>\r\n        {/* <Card>\r\n          <p>{pokemon}</p>\r\n          <img\r\n            // style={{ marginTop: '50px' }}\r\n            src={`https://res.cloudinary.com/aldencloud/image/upload/v1584876602/pokemonpng/poke-${this.props.match.params.id}.png`}\r\n            width='100%'\r\n          />\r\n        </Card> */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayPokemonBig;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Media, Image } from 'react-bootstrap';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Link } from 'react-router-dom';\r\nclass Evolutions extends Component {\r\n  state = {\r\n    evWidth: '30%',\r\n    transform: 'scale(1.0)',\r\n    boxShadow: 'none'\r\n  };\r\n  onMouseOver = () => {\r\n    this.setState({\r\n      transform: 'scale(1.05)',\r\n      boxShadow: '0px 5px 15px 5px rgba(87,255,196,0.5)'\r\n      // boxShadow: '0px 5px 15px 5px #FF5A5A'\r\n    });\r\n  };\r\n  onMouseOut = () => {\r\n    this.setState({\r\n      transform: 'scale(1.0)',\r\n      boxShadow: 'none'\r\n    });\r\n  };\r\n\r\n  getStyle = () => {\r\n    return {\r\n      boxShadow: this.state.boxShadow,\r\n      // borderRadius: '7px',\r\n      transition: 'transform .2s',\r\n      transform: this.state.transform,\r\n      padding: '5px',\r\n      borderRadius: '50%',\r\n      margin: '5px',\r\n      width: '100px',\r\n      height: '100px',\r\n      // border: '5px solid #ddd',\r\n      backgroundColor: 'rgb(35, 35, 35)',\r\n      border: '5px solid rgb(20, 20, 20)'\r\n    };\r\n  };\r\n  createEvolutionImage = imgId => {\r\n    return (\r\n      <Link style={{ textDecoration: 'none' }} to={`/pokemon/${imgId}`}>\r\n        <img\r\n          // width={this.state.evWidth}\r\n          style={this.getStyle()}\r\n          // width='100%'\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onTouchStart={this.onMouseOver}\r\n          onTouchEnd={this.onMouseOut}\r\n          // className='mr-3'\r\n          src={`https://res.cloudinary.com/aldencloud/image/upload/v1584876602/pokemonpng/poke-${imgId}.png`}\r\n          alt='Generic placeholder'\r\n        />\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.createEvolutionImage(this.props.imageid);\r\n  }\r\n}\r\nexport default Evolutions;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Media, Image, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Evolutions from './Evolutions';\r\nimport { Chip, ButtonBase } from '@material-ui/core';\r\n// import Skeleton from '@material-ui/lab/Skeleton';\r\nclass DisplayPokemon extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemonData: {},\r\n      dataLoaded: false,\r\n      evWidth: '30%',\r\n      // textColor: 'rgb(54,54,54)',\r\n      textColor: '#898989',\r\n      bodyColor: '#252525',\r\n      mediaColor: '#363636',\r\n      bgColor: 'rgb(25, 25, 25)',\r\n      border: '5px solid rgb(15, 15, 15)'\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        'https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json'\r\n      )\r\n      .then(res => this.setState({ pokemonData: res.data }));\r\n  }\r\n\r\n  getChipStyle = pokeType => {\r\n    switch (pokeType) {\r\n      case 'Bug':\r\n        return '#C3D21F';\r\n\r\n      case 'Dark':\r\n        return '#8E6956';\r\n\r\n      case 'Dragon':\r\n        return '#8774FF';\r\n\r\n      case 'Electric':\r\n        return '#FDE53D';\r\n\r\n      case 'Fairy':\r\n        return '#F9ADFF';\r\n\r\n      case 'Fighting':\r\n        return '#A85643';\r\n\r\n      case 'Fire':\r\n        return '#FA5643';\r\n\r\n      case 'Flying':\r\n        return '#79A4FF';\r\n\r\n      case 'Ghost':\r\n        return '#7873D4';\r\n\r\n      case 'Grass':\r\n        return '#8DD851';\r\n\r\n      case 'Ground':\r\n        return '#EDCC56';\r\n\r\n      case 'Ice':\r\n        return '#96F1FF';\r\n\r\n      case 'Normal':\r\n        return '#BDBDAE';\r\n\r\n      case 'Poison':\r\n        return '#AB5DA2';\r\n\r\n      case 'Psychic':\r\n        return '#F662B1';\r\n\r\n      case 'Rock':\r\n        return '#CDBD72';\r\n\r\n      case 'Stell':\r\n        return '#C4C2DB';\r\n\r\n      case 'Water':\r\n        return '#56AEFF';\r\n    }\r\n  };\r\n  createRowCol = (col1, col2) => {\r\n    return (\r\n      <h5>\r\n        <Row>\r\n          <Col align='left'>{col1}</Col>\r\n          <Col align='right'>{col2}</Col>\r\n        </Row>\r\n      </h5>\r\n    );\r\n  };\r\n  getDivStyle = () => {\r\n    return {\r\n      borderRadius: '12px',\r\n      paddingTop: '2vh',\r\n      paddingBottom: '2vh',\r\n      backgroundColor: this.state.bgColor\r\n    };\r\n  };\r\n  getEvolutions = pokeDisplay => {\r\n    let preEv = pokeDisplay?.prev_evolution;\r\n    let nexEv = pokeDisplay?.next_evolution;\r\n    if (preEv) {\r\n      if (nexEv) {\r\n        // Map previous, then current then next evolution\r\n        return (\r\n          <div style={this.getDivStyle()}>\r\n            <h3>Evolutions</h3>\r\n            {preEv?.map(t => (\r\n              // this.createEvolutionImage(t?.num?.replace(/^0+/, ''))\r\n              <Evolutions imageid={t?.num?.replace(/^0+/, '')} />\r\n            ))}\r\n            {/* {this.createEvolutionImage(this.props.match.params.id)} */}\r\n            <Evolutions imageid={this.props.match.params.id} />\r\n            {nexEv?.map(t => (\r\n              // this.createEvolutionImage(t?.num?.replace(/^0+/, ''))\r\n              <Evolutions imageid={t?.num?.replace(/^0+/, '')} />\r\n            ))}\r\n          </div>\r\n        );\r\n      } else {\r\n        // map all previous evolutions and display current\r\n        return (\r\n          <div style={this.getDivStyle()}>\r\n            <h3>Evolutions</h3>\r\n            {preEv?.map(t => (\r\n              // this.createEvolutionImage(t?.num?.replace(/^0+/, ''))\r\n              <Evolutions imageid={t?.num?.replace(/^0+/, '')} />\r\n            ))}\r\n            {/* {this.createEvolutionImage(this.props.match.params.id)} */}\r\n            <Evolutions imageid={this.props.match.params.id} />\r\n          </div>\r\n        );\r\n      }\r\n    } else if (nexEv) {\r\n      // display current and map all next evolutions\r\n      return (\r\n        <div style={this.getDivStyle()}>\r\n          <h3>Evolutions</h3>\r\n          {/* {this.createEvolutionImage(this.props.match.params.id)} */}\r\n          <Evolutions imageid={this.props.match.params.id} />\r\n          {nexEv?.map(t => (\r\n            // this.createEvolutionImage(t?.num?.replace(/^0+/, ''))\r\n            <Evolutions imageid={t?.num?.replace(/^0+/, '')} />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  getHr = () => {\r\n    return (\r\n      <hr\r\n        style={{\r\n          backgroundColor: 'rgb(25, 25, 25)',\r\n          border: '2px solid rgb(25, 25, 25)'\r\n          // width: '60%'\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    let pokemonDisplay;\r\n    if (this.state?.pokemonData) {\r\n      let { pokemon } = this.state.pokemonData;\r\n      pokemonDisplay = pokemon?.find(\r\n        poke => poke.id == this.props.match.params.id\r\n      );\r\n      console.log(pokemonDisplay);\r\n      console.log(pokemon);\r\n    } else {\r\n      console.log('no data');\r\n    }\r\n    return (\r\n      <Container\r\n        // fluid\r\n        style={{\r\n          // paddingBottom: '10vh',\r\n          marginTop: '10vh',\r\n          // marginBottom: '20px',\r\n          color: this.state.textColor\r\n          // backgroundColor: this.state.bodyColor\r\n        }}\r\n      >\r\n        <Row>\r\n          <img\r\n            width='50%'\r\n            className='mr-auto'\r\n            // class='align-self-center\"'\r\n            src={`https://res.cloudinary.com/aldencloud/image/upload/v1584876602/pokemonpng/poke-${this.props.match.params.id}.png`}\r\n            alt='Generic placeholder'\r\n            style={{ margin: 'auto' }}\r\n          />\r\n        </Row>\r\n\r\n        <div style={{ margin: 'auto' }} align='center'>\r\n          {this.getHr()}\r\n          <h1 align='center'>{pokemonDisplay?.name}</h1>\r\n          {/* {this.getHr()} */}\r\n          <div>\r\n            {pokemonDisplay?.type?.map(t => (\r\n              <>\r\n                <Chip\r\n                  // size='small'\r\n                  label={t}\r\n                  color='primary'\r\n                  style={{ backgroundColor: this.getChipStyle(t) }}\r\n                />{' '}\r\n              </>\r\n            ))}\r\n          </div>\r\n          <br />\r\n          <div\r\n            style={{\r\n              padding: '2vh 5vw 2vh 5vw',\r\n\r\n              border: '5px solid rgb(25, 25, 25)',\r\n              // backgroundColor: this.state.bgColor,\r\n              borderRadius: '12px'\r\n            }}\r\n          >\r\n            {this.createRowCol('Number :', pokemonDisplay?.id)}\r\n            {this.createRowCol('Height :', pokemonDisplay?.height)}\r\n            {this.createRowCol('Weight :', pokemonDisplay?.weight)}\r\n            {this.createRowCol('Spawn chance :', pokemonDisplay?.spawn_chance)}\r\n            {this.createRowCol('Avg Spawn :', pokemonDisplay?.avg_spawns)}\r\n            {this.createRowCol('Spawn time :', pokemonDisplay?.spawn_time)}\r\n          </div>\r\n          <br />\r\n\r\n          <div\r\n            // className='mr-auto'\r\n            style={{\r\n              // border: '2px solid rgb(54, 54, 54)',\r\n              backgroundColor: this.state.bgColor,\r\n              borderRadius: '12px',\r\n              paddingTop: '2vh',\r\n              paddingBottom: '2vh'\r\n              // border: this.state.border\r\n            }}\r\n          >\r\n            <h3>Weakness</h3>\r\n            {pokemonDisplay?.weaknesses?.map(t => (\r\n              <>\r\n                <Chip\r\n                  size='small'\r\n                  label={t}\r\n                  color='primary'\r\n                  style={{ backgroundColor: this.getChipStyle(t) }}\r\n                />{' '}\r\n              </>\r\n            ))}\r\n          </div>\r\n\r\n          <br />\r\n\r\n          {this.getEvolutions(pokemonDisplay)}\r\n        </div>\r\n\r\n        {/* </Card> */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayPokemon;\r\n","import React, { Component } from 'react';\n// import './App.css';\nimport './index.css';\nimport axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport Header from './Header';\nimport Jumbo from './HeaderJumbo';\nimport Footer from './Footer';\n// import DisplayImages from './Images';\n// import pngimg1 from './pokedex/1.png';\n// import pngimg2 from './pokedex/2.png';\n// import pngimg3 from './pokedex/3.png';\n// import pngimg4 from './pokedex/4.png';\nimport Coverflow from 'react-coverflow';\nimport { Container } from 'react-bootstrap';\nimport PokeList from './PokeList';\nimport PokeListP from './PokeListP';\nimport DisplayPokemonBig from './DisplayPokemonBig';\nimport DisplayPokemon from './DisplayPokemon';\nclass App extends Component {\n  state = {\n    pokemons: [\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      25,\n      26,\n      27,\n      28,\n      29,\n      30,\n      31,\n      32,\n      33,\n      34,\n      35,\n      36,\n      37,\n      38,\n      39,\n      40,\n      41,\n      42,\n      43,\n      44,\n      45,\n      46,\n      47,\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57,\n      58,\n      59,\n      60,\n      61,\n      62,\n      63,\n      64,\n      65,\n      66,\n      67,\n      68,\n      69,\n      70,\n      71,\n      72,\n      73,\n      74,\n      75,\n      76,\n      77,\n      78,\n      79,\n      80,\n      81,\n      82,\n      83,\n      84,\n      85,\n      86,\n      87,\n      88,\n      89,\n      90,\n      91,\n      92,\n      93,\n      94,\n      95,\n      96,\n      97,\n      98,\n      99,\n      100,\n      101,\n      102,\n      103,\n      104,\n      105,\n      106,\n      107,\n      108,\n      109,\n      110,\n      111,\n      112,\n      113,\n      114,\n      115,\n      116,\n      117,\n      118,\n      119,\n      120,\n      121,\n      122,\n      123,\n      124,\n      125,\n      126,\n      127,\n      128,\n      129,\n      130,\n      131,\n      132,\n      133,\n      134,\n      135,\n      136,\n      137,\n      138,\n      139,\n      140,\n      141,\n      142,\n      143,\n      144,\n      145,\n      146,\n      147,\n      148,\n      149,\n      150,\n      151\n    ],\n    pokemonData: {}\n  };\n  componentDidMount() {\n    axios\n      .get(\n        'https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json'\n      )\n      .then(res => this.setState({ pokemonData: res.data }));\n  }\n  render() {\n    // return (\n    //   <div className='App' style={{ backgroundColor: 'black' }}>\n    //     <Header />\n    //     <div>\n    //       <Container style={{ maxWidth: '100%', marginTop: '60px' }}>\n    //         <Coverflow\n    //           displayQuantityOfSide={3}\n    //           // navigation\n    //           width={900}\n    //           height={480}\n    //           infiniteScroll\n    //           enableHeading\n    //           media={{\n    //             // '@media (max-width: 900px)': {\n    //             //   // width: '600px',\n    //             //   // height: '300px'\n    //             // },\n    //             '@media (min-width: 900px)': {\n    //               width: '100%',\n    //               height: '80vh'\n    //             }\n    //           }}\n    //         >\n    //           {/* <img src='https://drive.google.com/open?id=1N9sI9VbyCmbOTmB3GFBLUHjj3bcYKZNr' /> */}\n    //           <img src={pngimg1} />\n    //           <img src={pngimg1} />\n    //           <img src={pngimg2} />\n    //           <img src={pngimg3} />\n    //           <img src={pngimg2} />\n    //           <img src={pngimg3} />\n    //           <img src={pngimg4} />\n    //           {/* <DisplayImages /> */}\n    //         </Coverflow>\n    //       </Container>\n    //     </div>\n    //   </div>\n    // );\n    // return (\n    //   <div>\n    //     <Header />\n    //     {/* <Jumbo /> */}\n    //     <div style={{ marginTop: '85px' }}>\n    //       {/* <PokeList pokemons={this.state.pokemons} /> */}\n    //       <PokeListP pokemons={this.state.pokemons} />\n    //     </div>\n    //   </div>\n    // );\n    return (\n      <div>\n        <Header />\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path='/react-pokedex-carousel'\n              render={props => (\n                <>\n                  <div style={{ marginTop: '120px' }}>\n                    {/* <PokeList pokemons={this.state.pokemons} /> */}\n                    <PokeListP pokemons={this.state.pokemons} />\n                  </div>\n                </>\n              )}\n            />\n            <Route\n              path={`/pokemon/:id`}\n              render={props => <DisplayPokemon {...props} />}\n            ></Route>\n            <Redirect exact from='/' to='/react-pokedex-carousel' />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}